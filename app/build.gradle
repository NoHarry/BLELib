apply plugin: 'com.android.application'
apply plugin: 'com.github.kt3k.coveralls'
apply from: '../jacoco.gradle'

apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "cc.noharry.bledemo"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        lintOptions {
            abortOnError false
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        dev {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

}
coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/testBlueDebugUnitTestCoverage/testBlueDebugUnitTestCoverage.xml"
}
tasks.coveralls {
    dependsOn 'testBlueDebugUnitTestCoverage'
    onlyIf { System.env.'CI' }
}



def build_param = "${build}";

if (build_param != "dev") {
    //exclude production build
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('dev')) {
            variant.setIgnore(true);
        }
    }
} else {
    //exclude all except production build
    android.variantFilter { variant ->
        if (!variant.buildType.name.equals('dev')) {
            variant.setIgnore(true);
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:' + rootProject.supportLibVersion
    implementation 'com.android.support.constraint:constraint-layout:' + rootProject.constraintLayoutVersion
    implementation 'com.android.support:support-v4:'+ rootProject.supportLibVersion
    testImplementation 'junit:junit:' + rootProject.juntiVersion
    androidTestImplementation 'com.android.support.test:runner:' + rootProject.runner
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:' + rootProject.espressoCore
//    implementation project(':blelib')
    implementation 'cc.noharry.blelib:blelib:0.0.7'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:' + rootProject.baseRecyclerViewAdapterVersion
    implementation 'android.arch.navigation:navigation-fragment:' + rootProject.navigationVersion
    implementation 'android.arch.navigation:navigation-ui:' + rootProject.navigationVersion
    implementation 'android.arch.lifecycle:runtime:' + rootProject.lifecycleVersion
    annotationProcessor "android.arch.lifecycle:compiler:" + rootProject.lifecycleVersion
    implementation 'android.arch.lifecycle:extensions:' + rootProject.lifecycleVersion

    //firebase
    implementation 'com.google.firebase:firebase-core:' + rootProject.firebaseCoreVersion
    implementation 'com.crashlytics.sdk.android:crashlytics:' + rootProject.crashlyticsVersion
    implementation 'com.google.firebase:firebase-messaging:' + rootProject.firebaseMessageVersion

}
apply plugin: 'com.google.gms.google-services'



